plugins {
	id 'com.google.protobuf' version '0.9.4'
}
project.ext.set('protobufVersion', '3.12.0')
project.ext.set('protocVersion', project.protobufVersion)

def isWindows = System.getProperty('os.name').toLowerCase().contains('windows')

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceSets {
	main {
		proto {
			srcDir file('./proto')
		}
		java {

			srcDirs = ['src',
					       'build/generated/source/proto/main/grpc',
					       'build/generated/source/proto/main/java']
		}
	}
	test {
		java {
			srcDirs = ['test']
		}
	}
}

repositories {
	mavenCentral()
}

test {
	useJUnitPlatform()
}

test {
	useJUnitPlatform()
}

def grpcVersion = '1.59.1'
def protobufVersion = '3.25.1'
def protocVersion = protobufVersion

dependencies {
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-services:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"
	compileOnly "org.apache.tomcat:annotations-api:6.0.53"

	runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

	testImplementation "io.grpc:grpc-testing:${grpcVersion}"
	testImplementation "io.grpc:grpc-inprocess:${grpcVersion}"

	testImplementation('junit:junit:4.12')
	testImplementation('org.junit.jupiter:junit-jupiter:5.8.2')
	testImplementation('org.mockito:mockito-core:5.10.0')
}

protobuf {
	protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
	plugins {
		grpc { 
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" 
			path = file(
        	'./node_modules/.bin/grpc_tools_node_protoc_plugin' + (isWindows ? '.cmd' : '')
      	)
    	}
    	ts {
      		path = file(
        		'./node_modules/.bin/protoc-gen-ts' + (isWindows ? '.cmd' : '')
      		)
    	}
	}
	generateProtoTasks {
		all().each { task ->
      		task.plugins {
        		grpc {
          			outputSubDir = 'js'
          			option 'grpc_js'
        		}
        		ts {
          			option 'service=grpc-node,mode=grpc-js'
        		}
      		}
      			task.builtins {
        			js {
          				option 'import_style=commonjs'
        			}
	  			}	
		}
	}
}
